// Generated by Haxe 4.3.3
#ifndef INCLUDED_hx_concurrent_collection__SynchronizedArray_SynchronizedArray_Impl_
#define INCLUDED_hx_concurrent_collection__SynchronizedArray_SynchronizedArray_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(hx,concurrent,collection,Collection)
HX_DECLARE_CLASS3(hx,concurrent,collection,OrderedCollection)
HX_DECLARE_CLASS4(hx,concurrent,collection,_SynchronizedArray,SynchronizedArrayImpl)
HX_DECLARE_CLASS4(hx,concurrent,collection,_SynchronizedArray,SynchronizedArray_Impl_)
HX_DECLARE_CLASS4(hx,concurrent,internal,_Either3,_Either3)

namespace hx{
namespace concurrent{
namespace collection{
namespace _SynchronizedArray{


class HXCPP_CLASS_ATTRIBUTES SynchronizedArray_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SynchronizedArray_Impl__obj OBJ_;
		SynchronizedArray_Impl__obj();

	public:
		enum { _hx_ClassId = 0x0c3b6e12 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hx.concurrent.collection._SynchronizedArray.SynchronizedArray_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"hx.concurrent.collection._SynchronizedArray.SynchronizedArray_Impl_"); }

		inline static ::hx::ObjectPtr< SynchronizedArray_Impl__obj > __new() {
			::hx::ObjectPtr< SynchronizedArray_Impl__obj > __this = new SynchronizedArray_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< SynchronizedArray_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			SynchronizedArray_Impl__obj *__this = (SynchronizedArray_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SynchronizedArray_Impl__obj), false, "hx.concurrent.collection._SynchronizedArray.SynchronizedArray_Impl_"));
			*(void **)__this = SynchronizedArray_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SynchronizedArray_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SynchronizedArray_Impl_",25,d8,39,65); }

		static  ::hx::concurrent::collection::_SynchronizedArray::SynchronizedArrayImpl _new( ::hx::concurrent::internal::_Either3::_Either3 initialValues);
		static ::Dynamic _new_dyn();

		static  ::Dynamic _get( ::hx::concurrent::collection::_SynchronizedArray::SynchronizedArrayImpl this1,int idx);
		static ::Dynamic _get_dyn();

		static  ::Dynamic _set( ::hx::concurrent::collection::_SynchronizedArray::SynchronizedArrayImpl this1,int idx, ::Dynamic x);
		static ::Dynamic _set_dyn();

};

} // end namespace hx
} // end namespace concurrent
} // end namespace collection
} // end namespace _SynchronizedArray

#endif /* INCLUDED_hx_concurrent_collection__SynchronizedArray_SynchronizedArray_Impl_ */ 
