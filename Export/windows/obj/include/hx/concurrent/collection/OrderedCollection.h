// Generated by Haxe 4.3.3
#ifndef INCLUDED_hx_concurrent_collection_OrderedCollection
#define INCLUDED_hx_concurrent_collection_OrderedCollection

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_hx_concurrent_collection_Collection
#include <hx/concurrent/collection/Collection.h>
#endif
HX_DECLARE_CLASS3(hx,concurrent,collection,Collection)
HX_DECLARE_CLASS3(hx,concurrent,collection,OrderedCollection)

namespace hx{
namespace concurrent{
namespace collection{


class HXCPP_CLASS_ATTRIBUTES OrderedCollection_obj {
	public:
		typedef  ::hx::concurrent::collection::Collection_obj super;
		HX_DO_INTERFACE_RTTI;

		int (::hx::Object :: *_hx_get_length)(); 
		static inline int get_length( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_get_length)();
		}
		void (::hx::Object :: *_hx_add)( ::Dynamic x); 
		static inline void add( ::Dynamic _hx_, ::Dynamic x) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_add)(x);
		}
		bool (::hx::Object :: *_hx_addIfAbsent)( ::Dynamic x); 
		static inline bool addIfAbsent( ::Dynamic _hx_, ::Dynamic x) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_addIfAbsent)(x);
		}
		void (::hx::Object :: *_hx_addAll)( ::hx::concurrent::internal::_Either3::_Either3 coll); 
		static inline void addAll( ::Dynamic _hx_, ::hx::concurrent::internal::_Either3::_Either3 coll) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_addAll)(coll);
		}
		void (::hx::Object :: *_hx_clear)(); 
		static inline void clear( ::Dynamic _hx_) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_clear)();
		}
		bool (::hx::Object :: *_hx_remove)( ::Dynamic x); 
		static inline bool remove( ::Dynamic _hx_, ::Dynamic x) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_remove)(x);
		}
		bool (::hx::Object :: *_hx_contains)( ::Dynamic x); 
		static inline bool contains( ::Dynamic _hx_, ::Dynamic x) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_contains)(x);
		}
		bool (::hx::Object :: *_hx_isEmpty)(); 
		static inline bool isEmpty( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_isEmpty)();
		}
		 ::Dynamic (::hx::Object :: *_hx_iterator)(); 
		static inline  ::Dynamic iterator( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_iterator)();
		}
		::Dynamic (::hx::Object :: *_hx_filter)( ::Dynamic fn); 
		static inline ::Dynamic filter( ::Dynamic _hx_, ::Dynamic fn) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_filter)(fn);
		}
		::Dynamic (::hx::Object :: *_hx_map)( ::Dynamic fn); 
		static inline ::Dynamic map( ::Dynamic _hx_, ::Dynamic fn) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_map)(fn);
		}
		::Dynamic (::hx::Object :: *_hx_copy)(); 
		static inline ::Dynamic copy( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_copy)();
		}
		::cpp::VirtualArray (::hx::Object :: *_hx_toArray)(); 
		static inline ::cpp::VirtualArray toArray( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_toArray)();
		}
		::String (::hx::Object :: *_hx_toString)(); 
		static inline ::String toString( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_toString)();
		}
		::String (::hx::Object :: *_hx_join)(::String sep); 
		static inline ::String join( ::Dynamic _hx_,::String sep) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_join)(sep);
		}
		 ::Dynamic (::hx::Object :: *_hx_get_first)(); 
		static inline  ::Dynamic get_first( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_get_first)();
		}
		 ::Dynamic (::hx::Object :: *_hx_get_last)(); 
		static inline  ::Dynamic get_last( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_get_last)();
		}
		void (::hx::Object :: *_hx_insertAt)(int idx, ::Dynamic x); 
		static inline void insertAt( ::Dynamic _hx_,int idx, ::Dynamic x) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_insertAt)(idx,x);
		}
		 ::Dynamic (::hx::Object :: *_hx_removeAt)(int idx,::hx::Null< bool >  throwIfOutOfRange); 
		static inline  ::Dynamic removeAt( ::Dynamic _hx_,int idx,::hx::Null< bool >  throwIfOutOfRange) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_removeAt)(idx,throwIfOutOfRange);
		}
		 ::Dynamic (::hx::Object :: *_hx_removeFirst)(::hx::Null< bool >  throwIfEmpty); 
		static inline  ::Dynamic removeFirst( ::Dynamic _hx_,::hx::Null< bool >  throwIfEmpty) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_removeFirst)(throwIfEmpty);
		}
		 ::Dynamic (::hx::Object :: *_hx_removeLast)(::hx::Null< bool >  throwIfEmpty); 
		static inline  ::Dynamic removeLast( ::Dynamic _hx_,::hx::Null< bool >  throwIfEmpty) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_removeLast)(throwIfEmpty);
		}
		 ::Dynamic (::hx::Object :: *_hx_get)(int idx,::hx::Null< bool >  throwIfOutOfRange); 
		static inline  ::Dynamic get( ::Dynamic _hx_,int idx,::hx::Null< bool >  throwIfOutOfRange) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_get)(idx,throwIfOutOfRange);
		}
		int (::hx::Object :: *_hx_indexOf)( ::Dynamic x,::hx::Null< int >  startAt); 
		static inline int indexOf( ::Dynamic _hx_, ::Dynamic x,::hx::Null< int >  startAt) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_indexOf)(x,startAt);
		}
		int (::hx::Object :: *_hx_lastIndexOf)( ::Dynamic x, ::Dynamic startAt); 
		static inline int lastIndexOf( ::Dynamic _hx_, ::Dynamic x, ::Dynamic startAt) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::hx::concurrent::collection::OrderedCollection_obj *>(_hx_.mPtr->_hx_getInterface(0x158377c6)))->_hx_lastIndexOf)(x,startAt);
		}
};

} // end namespace hx
} // end namespace concurrent
} // end namespace collection

#endif /* INCLUDED_hx_concurrent_collection_OrderedCollection */ 
