// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_hx_concurrent_atomic__AtomicInt_AtomicIntImpl
#include <hx/concurrent/atomic/_AtomicInt/AtomicIntImpl.h>
#endif
#ifndef INCLUDED_hx_concurrent_atomic__AtomicInt_AtomicInt_Impl_
#include <hx/concurrent/atomic/_AtomicInt/AtomicInt_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_29__new,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","_new",0x6165a96a,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_._new","hx/concurrent/atomic/AtomicInt.hx",29,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_33_toInt,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","toInt",0xef8cb20b,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.toInt","hx/concurrent/atomic/AtomicInt.hx",33,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_35_op_add_assign1,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_add_assign1",0x31db0daf,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_add_assign1","hx/concurrent/atomic/AtomicInt.hx",35,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_36_op_sub_assign1,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_sub_assign1",0x608dbc0e,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_sub_assign1","hx/concurrent/atomic/AtomicInt.hx",36,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_37_op_add_assign2,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_add_assign2",0x31db0db0,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_add_assign2","hx/concurrent/atomic/AtomicInt.hx",37,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_38_op_sub_assign2,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_sub_assign2",0x608dbc0f,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_sub_assign2","hx/concurrent/atomic/AtomicInt.hx",38,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_40_op_add1,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_add1",0xaa42c5a5,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_add1","hx/concurrent/atomic/AtomicInt.hx",40,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_41_op_add2,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_add2",0xaa42c5a6,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_add2","hx/concurrent/atomic/AtomicInt.hx",41,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_42_op_sub1,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_sub1",0xb6358166,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_sub1","hx/concurrent/atomic/AtomicInt.hx",42,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_43_op_sub2,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_sub2",0xb6358167,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_sub2","hx/concurrent/atomic/AtomicInt.hx",43,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_45_op_lt1,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_lt1",0x4db60b94,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_lt1","hx/concurrent/atomic/AtomicInt.hx",45,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_46_op_lt2,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_lt2",0x4db60b95,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_lt2","hx/concurrent/atomic/AtomicInt.hx",46,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_47_op_lt3,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_lt3",0x4db60b96,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_lt3","hx/concurrent/atomic/AtomicInt.hx",47,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_48_op_gt1,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_gt1",0x4db2404f,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_gt1","hx/concurrent/atomic/AtomicInt.hx",48,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_49_op_gt2,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_gt2",0x4db24050,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_gt2","hx/concurrent/atomic/AtomicInt.hx",49,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_50_op_gt3,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_gt3",0x4db24051,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_gt3","hx/concurrent/atomic/AtomicInt.hx",50,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_52_op_le,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_le",0x0f45b1ee,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_le","hx/concurrent/atomic/AtomicInt.hx",52,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_53_op_ge,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_ge",0x0f45ad93,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_ge","hx/concurrent/atomic/AtomicInt.hx",53,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_55_op_decrement_pre,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_decrement_pre",0xa1554762,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_decrement_pre","hx/concurrent/atomic/AtomicInt.hx",55,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_56_op_decrement_post,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_decrement_post",0x8946f441,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_decrement_post","hx/concurrent/atomic/AtomicInt.hx",56,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_57_op_increment_pre,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_increment_pre",0x4dd2957e,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_increment_pre","hx/concurrent/atomic/AtomicInt.hx",57,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_58_op_increment_post,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_increment_post",0xca6dfea5,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_increment_post","hx/concurrent/atomic/AtomicInt.hx",58,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_60_op_negate,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_negate",0x9ce5f3b7,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_negate","hx/concurrent/atomic/AtomicInt.hx",60,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_62_op_add3,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_add3",0xaa42c5a7,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_add3","hx/concurrent/atomic/AtomicInt.hx",62,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_63_op_sub3,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","op_sub3",0xb6358168,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.op_sub3","hx/concurrent/atomic/AtomicInt.hx",63,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_65_increment,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","increment",0x7c963186,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.increment","hx/concurrent/atomic/AtomicInt.hx",65,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_66_decrement,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","decrement",0x5b19216a,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.decrement","hx/concurrent/atomic/AtomicInt.hx",66,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_67_decrementAndGet,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","decrementAndGet",0x45a0df09,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.decrementAndGet","hx/concurrent/atomic/AtomicInt.hx",67,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_68_getAndDecrement,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","getAndDecrement",0x4e056489,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.getAndDecrement","hx/concurrent/atomic/AtomicInt.hx",68,0x1c4debc5)
HX_LOCAL_STACK_FRAME(_hx_pos_9e4ecc81af0745d5_77_toString,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_","toString",0x722a9d35,"hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_.toString","hx/concurrent/atomic/AtomicInt.hx",77,0x1c4debc5)
namespace hx{
namespace concurrent{
namespace atomic{
namespace _AtomicInt{

void AtomicInt_Impl__obj::__construct() { }

Dynamic AtomicInt_Impl__obj::__CreateEmpty() { return new AtomicInt_Impl__obj; }

void *AtomicInt_Impl__obj::_hx_vtable = 0;

Dynamic AtomicInt_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< AtomicInt_Impl__obj > _hx_result = new AtomicInt_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool AtomicInt_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7404a929;
}

 ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl AtomicInt_Impl__obj::_new(::hx::Null< int >  __o_val){
            		int val = __o_val.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_29__new)
HXDLIN(  29)		return  ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl_obj::__alloc( HX_CTX ,val);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AtomicInt_Impl__obj,_new,return )

int AtomicInt_Impl__obj::toInt( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_33_toInt)
HXDLIN(  33)		return this1->get_value();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AtomicInt_Impl__obj,toInt,return )

 ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl AtomicInt_Impl__obj::op_add_assign1( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,int v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_35_op_add_assign1)
HXDLIN(  35)		this1->incrementAndGet(v);
HXDLIN(  35)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_add_assign1,return )

 ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl AtomicInt_Impl__obj::op_sub_assign1( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,int v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_36_op_sub_assign1)
HXDLIN(  36)		this1->incrementAndGet(-(v));
HXDLIN(  36)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_sub_assign1,return )

 ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl AtomicInt_Impl__obj::op_add_assign2( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1, ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_37_op_add_assign2)
HXDLIN(  37)		this1->incrementAndGet(v->get_value());
HXDLIN(  37)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_add_assign2,return )

 ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl AtomicInt_Impl__obj::op_sub_assign2( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1, ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_38_op_sub_assign2)
HXDLIN(  38)		this1->incrementAndGet(-(v->get_value()));
HXDLIN(  38)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_sub_assign2,return )

int AtomicInt_Impl__obj::op_add1( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,int v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_40_op_add1)
HXDLIN(  40)		return (this1->get_value() + v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_add1,return )

int AtomicInt_Impl__obj::op_add2( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1, ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_41_op_add2)
HXDLIN(  41)		int _hx_tmp = this1->get_value();
HXDLIN(  41)		return (_hx_tmp + v->get_value());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_add2,return )

int AtomicInt_Impl__obj::op_sub1( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,int v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_42_op_sub1)
HXDLIN(  42)		return (this1->get_value() - v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_sub1,return )

int AtomicInt_Impl__obj::op_sub2( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1, ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_43_op_sub2)
HXDLIN(  43)		int _hx_tmp = this1->get_value();
HXDLIN(  43)		return (_hx_tmp - v->get_value());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_sub2,return )

bool AtomicInt_Impl__obj::op_lt1( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,int v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_45_op_lt1)
HXDLIN(  45)		return (this1->get_value() < v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_lt1,return )

bool AtomicInt_Impl__obj::op_lt2( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1, ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_46_op_lt2)
HXDLIN(  46)		int _hx_tmp = this1->get_value();
HXDLIN(  46)		return (_hx_tmp < v->get_value());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_lt2,return )

bool AtomicInt_Impl__obj::op_lt3( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_47_op_lt3)
HXDLIN(  47)		return (this1->get_value() < v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_lt3,return )

bool AtomicInt_Impl__obj::op_gt1( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,int v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_48_op_gt1)
HXDLIN(  48)		return (this1->get_value() > v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_gt1,return )

bool AtomicInt_Impl__obj::op_gt2( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1, ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_49_op_gt2)
HXDLIN(  49)		int _hx_tmp = this1->get_value();
HXDLIN(  49)		return (_hx_tmp > v->get_value());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_gt2,return )

bool AtomicInt_Impl__obj::op_gt3( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_50_op_gt3)
HXDLIN(  50)		return (this1->get_value() > v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_gt3,return )

bool AtomicInt_Impl__obj::op_le( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_52_op_le)
HXDLIN(  52)		return (this1->get_value() <= v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_le,return )

bool AtomicInt_Impl__obj::op_ge( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,Float v){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_53_op_ge)
HXDLIN(  53)		return (this1->get_value() >= v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_ge,return )

int AtomicInt_Impl__obj::op_decrement_pre( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_55_op_decrement_pre)
HXDLIN(  55)		return this1->incrementAndGet(-1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AtomicInt_Impl__obj,op_decrement_pre,return )

int AtomicInt_Impl__obj::op_decrement_post( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_56_op_decrement_post)
HXDLIN(  56)		return this1->getAndIncrement(-1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AtomicInt_Impl__obj,op_decrement_post,return )

int AtomicInt_Impl__obj::op_increment_pre( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_57_op_increment_pre)
HXDLIN(  57)		return this1->incrementAndGet(null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AtomicInt_Impl__obj,op_increment_pre,return )

int AtomicInt_Impl__obj::op_increment_post( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_58_op_increment_post)
HXDLIN(  58)		return this1->getAndIncrement(null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AtomicInt_Impl__obj,op_increment_post,return )

int AtomicInt_Impl__obj::op_negate( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_60_op_negate)
HXDLIN(  60)		return -(this1->get_value());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AtomicInt_Impl__obj,op_negate,return )

int AtomicInt_Impl__obj::op_add3(int a, ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl b){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_62_op_add3)
HXDLIN(  62)		return (a + b->get_value());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_add3,return )

int AtomicInt_Impl__obj::op_sub3(int a, ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl b){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_63_op_sub3)
HXDLIN(  63)		return (a - b->get_value());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,op_sub3,return )

void AtomicInt_Impl__obj::increment( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,::hx::Null< int >  __o_amount){
            		int amount = __o_amount.Default(1);
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_65_increment)
HXDLIN(  65)		this1->incrementAndGet(amount);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,increment,(void))

void AtomicInt_Impl__obj::decrement( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,::hx::Null< int >  __o_amount){
            		int amount = __o_amount.Default(1);
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_66_decrement)
HXDLIN(  66)		this1->incrementAndGet(-(amount));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,decrement,(void))

int AtomicInt_Impl__obj::decrementAndGet( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,::hx::Null< int >  __o_amount){
            		int amount = __o_amount.Default(1);
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_67_decrementAndGet)
HXDLIN(  67)		return this1->incrementAndGet(-(amount));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,decrementAndGet,return )

int AtomicInt_Impl__obj::getAndDecrement( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1,::hx::Null< int >  __o_amount){
            		int amount = __o_amount.Default(1);
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_68_getAndDecrement)
HXDLIN(  68)		return this1->getAndIncrement(-(amount));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AtomicInt_Impl__obj,getAndDecrement,return )

::String AtomicInt_Impl__obj::toString( ::hx::concurrent::atomic::_AtomicInt::AtomicIntImpl this1){
            	HX_STACKFRAME(&_hx_pos_9e4ecc81af0745d5_77_toString)
HXDLIN(  77)		return ::Std_obj::string(this1->get_value());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AtomicInt_Impl__obj,toString,return )


AtomicInt_Impl__obj::AtomicInt_Impl__obj()
{
}

bool AtomicInt_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toInt") ) { outValue = toInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_le") ) { outValue = op_le_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_ge") ) { outValue = op_ge_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"op_lt1") ) { outValue = op_lt1_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_lt2") ) { outValue = op_lt2_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_lt3") ) { outValue = op_lt3_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_gt1") ) { outValue = op_gt1_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_gt2") ) { outValue = op_gt2_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_gt3") ) { outValue = op_gt3_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"op_add1") ) { outValue = op_add1_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_add2") ) { outValue = op_add2_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_sub1") ) { outValue = op_sub1_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_sub2") ) { outValue = op_sub2_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_add3") ) { outValue = op_add3_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_sub3") ) { outValue = op_sub3_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"op_negate") ) { outValue = op_negate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"increment") ) { outValue = increment_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"decrement") ) { outValue = decrement_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"op_add_assign1") ) { outValue = op_add_assign1_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_sub_assign1") ) { outValue = op_sub_assign1_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_add_assign2") ) { outValue = op_add_assign2_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_sub_assign2") ) { outValue = op_sub_assign2_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"decrementAndGet") ) { outValue = decrementAndGet_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getAndDecrement") ) { outValue = getAndDecrement_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"op_decrement_pre") ) { outValue = op_decrement_pre_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_increment_pre") ) { outValue = op_increment_pre_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"op_decrement_post") ) { outValue = op_decrement_post_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"op_increment_post") ) { outValue = op_increment_post_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *AtomicInt_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *AtomicInt_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class AtomicInt_Impl__obj::__mClass;

static ::String AtomicInt_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("toInt",34,be,11,14),
	HX_("op_add_assign1",66,b4,41,1e),
	HX_("op_sub_assign1",c5,62,f4,4c),
	HX_("op_add_assign2",67,b4,41,1e),
	HX_("op_sub_assign2",c6,62,f4,4c),
	HX_("op_add1",0e,ee,41,c3),
	HX_("op_add2",0f,ee,41,c3),
	HX_("op_sub1",cf,a9,34,cf),
	HX_("op_sub2",d0,a9,34,cf),
	HX_("op_lt1",4b,a3,9b,1d),
	HX_("op_lt2",4c,a3,9b,1d),
	HX_("op_lt3",4d,a3,9b,1d),
	HX_("op_gt1",06,d8,97,1d),
	HX_("op_gt2",07,d8,97,1d),
	HX_("op_gt3",08,d8,97,1d),
	HX_("op_le",17,be,ca,33),
	HX_("op_ge",bc,b9,ca,33),
	HX_("op_decrement_pre",d9,49,bc,71),
	HX_("op_decrement_post",ea,19,02,13),
	HX_("op_increment_pre",f5,97,39,1e),
	HX_("op_increment_post",4e,24,29,54),
	HX_("op_negate",60,c8,4e,52),
	HX_("op_add3",10,ee,41,c3),
	HX_("op_sub3",d1,a9,34,cf),
	HX_("increment",2f,06,ff,31),
	HX_("decrement",13,f6,81,10),
	HX_("decrementAndGet",72,18,0c,33),
	HX_("getAndDecrement",f2,9d,70,3b),
	HX_("toString",ac,d0,6e,38),
	::String(null())
};

void AtomicInt_Impl__obj::__register()
{
	AtomicInt_Impl__obj _hx_dummy;
	AtomicInt_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hx.concurrent.atomic._AtomicInt.AtomicInt_Impl_",05,49,48,22);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &AtomicInt_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(AtomicInt_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< AtomicInt_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AtomicInt_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AtomicInt_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hx
} // end namespace concurrent
} // end namespace atomic
} // end namespace _AtomicInt
