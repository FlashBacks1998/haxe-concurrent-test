// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_hx_concurrent_Future
#include <hx/concurrent/Future.h>
#endif
#ifndef INCLUDED_hx_concurrent_FutureResult
#include <hx/concurrent/FutureResult.h>
#endif

namespace hx{
namespace concurrent{


static ::String Future_obj_sMemberFields[] = {
	HX_("isComplete",c3,12,77,fa),
	HX_("result",dd,68,84,08),
	HX_("onCompletion",1b,6d,9b,da),
	::String(null()) };

::hx::Class Future_obj::__mClass;

void Future_obj::__register()
{
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hx.concurrent.Future",dc,aa,45,ac);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Future_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TIsInterface< (int)0xdec70c2a >;
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hx
} // end namespace concurrent
