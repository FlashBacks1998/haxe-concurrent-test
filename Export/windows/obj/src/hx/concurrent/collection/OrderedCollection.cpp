// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_hx_concurrent_collection_Collection
#include <hx/concurrent/collection/Collection.h>
#endif
#ifndef INCLUDED_hx_concurrent_collection_OrderedCollection
#include <hx/concurrent/collection/OrderedCollection.h>
#endif

namespace hx{
namespace concurrent{
namespace collection{


static ::String OrderedCollection_obj_sMemberFields[] = {
	HX_("get_first",87,d4,46,44),
	HX_("get_last",df,c5,67,c7),
	HX_("insertAt",8c,7c,1f,c2),
	HX_("removeAt",57,6e,1b,ad),
	HX_("removeFirst",4c,55,d1,fe),
	HX_("removeLast",ba,44,cc,c4),
	HX_("get",96,80,4e,00),
	HX_("indexOf",c9,48,bf,e0),
	HX_("lastIndexOf",13,fd,6a,95),
	::String(null()) };

::hx::Class OrderedCollection_obj::__mClass;

void OrderedCollection_obj::__register()
{
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hx.concurrent.collection.OrderedCollection",34,f0,8a,4f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(OrderedCollection_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TIsInterface< (int)0x158377c6 >;
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hx
} // end namespace concurrent
} // end namespace collection
