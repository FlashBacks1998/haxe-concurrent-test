// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_hx_concurrent_collection_Collection
#include <hx/concurrent/collection/Collection.h>
#endif
#ifndef INCLUDED_hx_concurrent_collection_OrderedCollection
#include <hx/concurrent/collection/OrderedCollection.h>
#endif
#ifndef INCLUDED_hx_concurrent_collection__CopyOnWriteArray_CopyOnWriteArrayImpl
#include <hx/concurrent/collection/_CopyOnWriteArray/CopyOnWriteArrayImpl.h>
#endif
#ifndef INCLUDED_hx_concurrent_collection__CopyOnWriteArray_CopyOnWriteArray_Impl_
#include <hx/concurrent/collection/_CopyOnWriteArray/CopyOnWriteArray_Impl_.h>
#endif
#ifndef INCLUDED_hx_concurrent_internal__Either3__Either3
#include <hx/concurrent/internal/_Either3/_Either3.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_0e91735c5e4e74e2_17__new,"hx.concurrent.collection._CopyOnWriteArray.CopyOnWriteArray_Impl_","_new",0xa9763bc9,"hx.concurrent.collection._CopyOnWriteArray.CopyOnWriteArray_Impl_._new","hx/concurrent/collection/CopyOnWriteArray.hx",17,0x7c9e4b78)
HX_LOCAL_STACK_FRAME(_hx_pos_0e91735c5e4e74e2_31__get,"hx.concurrent.collection._CopyOnWriteArray.CopyOnWriteArray_Impl_","_get",0xa970ebff,"hx.concurrent.collection._CopyOnWriteArray.CopyOnWriteArray_Impl_._get","hx/concurrent/collection/CopyOnWriteArray.hx",31,0x7c9e4b78)
HX_LOCAL_STACK_FRAME(_hx_pos_0e91735c5e4e74e2_38__set,"hx.concurrent.collection._CopyOnWriteArray.CopyOnWriteArray_Impl_","_set",0xa97a070b,"hx.concurrent.collection._CopyOnWriteArray.CopyOnWriteArray_Impl_._set","hx/concurrent/collection/CopyOnWriteArray.hx",38,0x7c9e4b78)
namespace hx{
namespace concurrent{
namespace collection{
namespace _CopyOnWriteArray{

void CopyOnWriteArray_Impl__obj::__construct() { }

Dynamic CopyOnWriteArray_Impl__obj::__CreateEmpty() { return new CopyOnWriteArray_Impl__obj; }

void *CopyOnWriteArray_Impl__obj::_hx_vtable = 0;

Dynamic CopyOnWriteArray_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CopyOnWriteArray_Impl__obj > _hx_result = new CopyOnWriteArray_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CopyOnWriteArray_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x04b5cbb2;
}

 ::hx::concurrent::collection::_CopyOnWriteArray::CopyOnWriteArrayImpl CopyOnWriteArray_Impl__obj::_new( ::hx::concurrent::internal::_Either3::_Either3 initialValues){
            	HX_GC_STACKFRAME(&_hx_pos_0e91735c5e4e74e2_17__new)
HXDLIN(  17)		 ::hx::concurrent::collection::_CopyOnWriteArray::CopyOnWriteArrayImpl this1 =  ::hx::concurrent::collection::_CopyOnWriteArray::CopyOnWriteArrayImpl_obj::__alloc( HX_CTX );
HXLINE(  19)		if (::hx::IsNotNull( initialValues )) {
HXLINE(  20)			this1->addAll(initialValues);
            		}
HXLINE(  17)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CopyOnWriteArray_Impl__obj,_new,return )

 ::Dynamic CopyOnWriteArray_Impl__obj::_get( ::hx::concurrent::collection::_CopyOnWriteArray::CopyOnWriteArrayImpl this1,int idx){
            	HX_STACKFRAME(&_hx_pos_0e91735c5e4e74e2_31__get)
HXDLIN(  31)		return this1->get(idx,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CopyOnWriteArray_Impl__obj,_get,return )

 ::Dynamic CopyOnWriteArray_Impl__obj::_set( ::hx::concurrent::collection::_CopyOnWriteArray::CopyOnWriteArrayImpl this1,int idx, ::Dynamic x){
            	HX_STACKFRAME(&_hx_pos_0e91735c5e4e74e2_38__set)
HXLINE(  39)		this1->_set(idx,x);
HXLINE(  40)		return x;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(CopyOnWriteArray_Impl__obj,_set,return )


CopyOnWriteArray_Impl__obj::CopyOnWriteArray_Impl__obj()
{
}

bool CopyOnWriteArray_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"_get") ) { outValue = _get_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"_set") ) { outValue = _set_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *CopyOnWriteArray_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *CopyOnWriteArray_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class CopyOnWriteArray_Impl__obj::__mClass;

static ::String CopyOnWriteArray_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("_get",97,c5,19,3f),
	HX_("_set",a3,e0,22,3f),
	::String(null())
};

void CopyOnWriteArray_Impl__obj::__register()
{
	CopyOnWriteArray_Impl__obj _hx_dummy;
	CopyOnWriteArray_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hx.concurrent.collection._CopyOnWriteArray.CopyOnWriteArray_Impl_",06,d3,9e,c8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CopyOnWriteArray_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(CopyOnWriteArray_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< CopyOnWriteArray_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CopyOnWriteArray_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CopyOnWriteArray_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hx
} // end namespace concurrent
} // end namespace collection
} // end namespace _CopyOnWriteArray
